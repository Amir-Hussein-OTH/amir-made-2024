// Define a constant for the columns
constant ColumnsDefinition = [
    "EVA_NR" oftype integer,
    "DS100" oftype text,
    "IFOPT" oftype IFOPT,
    "NAME" oftype text,
    "Verkehr" oftype VerkehrType,
    "Laenge" oftype Coordinate,
    "Breite" oftype Coordinate,
    "Betreiber_Name" oftype text,
    "Betreiber_Nr" oftype integer
];

// Pipeline definition for processing train stops data
constraint VerkehrConstraint oftype AllowlistConstraint {
    allowlist: ["FV", "RV", "nur DPN"];
}

valuetype VerkehrType oftype text {
	constraints: [
		VerkehrConstraint,
	];
}


constraint CoordinateConstraint oftype RangeConstraint {
    lowerBound: -90;
    upperBound: 90;
}

// the valuetype GeographicCoordinate that only allows decimals defined in GeographicCoordinateRange
valuetype Coordinate oftype decimal {
    constraints: [
        CoordinateConstraint,
    ];
}

// the constraint IFOTP_Format that only allows input that fullfills the following regex
constraint IfoptConstraint oftype RegexConstraint {
    regex: /[a-z]{2}:\d+:\d+(:\d+)?(:\d+)?/;
}

valuetype IFOPT oftype text {
    constraints: [
        IfoptConstraint,
    ];
}


pipeline TrainstopsPipeline {
    TrainstopsExtractor
        -> TrainstopsTextFileInterpreter
        -> TrainstopsCsvInterpreter
        -> TrainstopsTableInterpreter
        -> TrainstopsSQLiteLoader;


    block TrainstopsExtractor oftype HttpExtractor {
        url: "https://download-data.deutschebahn.com/static/datasets/haltestellen/D_Bahnhof_2020_alle.CSV";
    }

    block TrainstopsTextFileInterpreter oftype TextFileInterpreter {

    }

    block TrainstopsCsvInterpreter oftype CSVInterpreter {
        delimiter: ";";
    }

    block TrainstopsTableInterpreter oftype TableInterpreter {
        header: true;
        columns: ColumnsDefinition;
    }

    // the loader than stores the table into a sqlite database called "trainstops"
    block TrainstopsSQLiteLoader oftype SQLiteLoader {
		table: "trainstops";
		file: "trainstops.sqlite";
	}
}
